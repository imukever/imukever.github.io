---
title: "下载网易yum源"
layout: post
date: 2016-10-07 09:30
tag:
- python
blog: true
---

最近在搭建opensatck环境，由于所有的部署为离线的状态，所以决定自己搭建一个yum源服务器
网上也有一下关于reposync和createrepo的用法，我在使用reposync时很多包出现下载失败，于是自己就写了一个脚本


```python

#!/usr/bin/env python
# coding=utf-8


import requests
import urllib2
import bs4
import sys
import socket


reload(sys)
sys.setdefaultencoding('utf8')

headers = {
    "Accept-Language":"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3",
    "User-Agent":"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0"

}

#获取网页源代码
def get_Html(url,header):

    try:
        #打开页面
        #设置使用代理
        socket.setdefaulttimeout(60)
        req = urllib2.Request(url,None,header)
        response = urllib2.urlopen(req,None,60)
        Code =  response.code
        if Code!=200:
            #响应码不是200
            print url  +"error"
        the_page = response.read()
        return  the_page

    except Exception,e:
        print "页面打开出错"
        print Exception ,":",e


if __name__ == '__main__':

    url = "http://mirrors.163.com/centos/7/cloud/x86_64/openstack-kilo/common/"
    html = get_Html(url, headers)
    bs = bs4.BeautifulSoup(html)
    url_tag = bs.find_all('a')
    number = len(url_tag)
    for i in range(1,number):
        name = url_tag[i]['href']
        print name + "下载中.."
        request_url = url+name
        data = requests.get(request_url, stream=True)
        with open("./common/"+name, 'wb') as f:
            for chunk in data.iter_content(chunk_size=1024):
                if chunk:  # filter out keep-alive new chunks
                    f.write(chunk)
                    f.flush()
            f.close()

```

需要的同学，可以直接修改url和需要下载的文件目录即可
