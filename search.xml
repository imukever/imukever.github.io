<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Gitlab代码托管和自动化CI</title>
      <link href="/2019/06/03/dai-ma-guan-li/gitlab/2016-9-1-gitlab-dai-ma-tuo-guan-he-zi-dong-hua-ci/"/>
      <url>/2019/06/03/dai-ma-guan-li/gitlab/2016-9-1-gitlab-dai-ma-tuo-guan-he-zi-dong-hua-ci/</url>
      
        <content type="html"><![CDATA[<p><strong><em>Gitlab的安装</em></strong></p><p>使用清华源配置Gitlab</p><pre><code>https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/</code></pre><p>  <img src="./png/gitlab-tuna.png" alt="Alt text"></p><p>因为gitlab需要配置邮件提醒，所以需要提前配置163邮箱的stmp</p><p>  <img src="./png/stmp.png" alt="Alt text"></p><p>修改配置文件</p><pre><code>sudo vim /etc/gitlab/gitlab.rb</code></pre><p>修改的具体内容如下</p><p>  <img src="./png/gitlab.png" alt="Alt text"></p><p>  gitlab[‘smtp_password’]为自己设置的stmp密码（不是163邮箱的密码）</p><p>  <img src="./png/gitlab-mail.png" alt="Alt text"></p><p>注意：user[‘git_user_email’] 要和gitlab[‘smtp_user_name’]一致</p><p>  <img src="./png/gitlab-mail-user.png" alt="Alt text"></p><p>配置完成之后，启动gitlab</p><pre><code>sudo gitlab-ctl configure</code></pre><p>配置成功后出现的界面（至于logo部分，可以自行修改）</p><p>  <img src="./png/gitlab-login.png" alt="Alt text"></p><p><strong><em>配置CI</em></strong></p><p>同样使用清华的源，先安装docker，安装时如果出错，请停止gitlab。如果没有错误提示，按照清华源提示操作。</p><pre><code>sudo gitlab-ctl stop</code></pre><p>  <img src="./png/docker.png" alt="Alt text"></p><p>同样使用清华的源，安装gitlab-ci-multi-runner</p><p>  <img src="./png/ci.png" alt="Alt text"></p><p>新建一个项目，推到gitlab</p><p>然后配置 .gitlab-ci.yml</p><p>  <img src="./png/ci-test.png" alt="Alt text"></p><p>注册runner</p><p>记住url和token<br>  <img src="./png/runner.png" alt="Alt text"></p><pre><code>  sudo gitlab-runner register</code></pre><p>  <img src="./png/register.png" alt="Alt text"></p><p>开启gitlab-runner</p><pre><code>```sudo gitlab-runner run```</code></pre><p>成功的结果<br>  <img src="./png/success.png" alt="Alt text"></p><p>gitlab-ci配置文件教程</p><pre><code>http://docs.gitlab.com/ce/ci/yaml/README.html#cache</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> Gitlab </tag>
            
            <tag> CI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gitlab-CI自动化运行机器学习scikit-learn</title>
      <link href="/2019/06/03/dai-ma-guan-li/gitlab/2016-9-2-gitlab-ci-zi-dong-hua-yun-xing-ji-qi-xue-xi-scikit-learn/"/>
      <url>/2019/06/03/dai-ma-guan-li/gitlab/2016-9-2-gitlab-ci-zi-dong-hua-yun-xing-ji-qi-xue-xi-scikit-learn/</url>
      
        <content type="html"><![CDATA[<p>在Gitlab代码托管和自动化CI部分中使用docker能完成c++代码的编译运行，当我运行</p><pre><code>python ****.py</code></pre><p>总是提示我没有安装numpy模块，其实我是安装的了。<br>使用</p><pre><code>sudo gitlab-runner run --help</code></pre><p>  <img src="./png/gitlab-runner-help.png" alt="Alt text"></p><p>发现gitlab-runner的编译log可以添加到系统的log</p><pre><code>cat /var/log/syslog</code></pre><p>  <img src="./png/gitlab-syslog.png" alt="Alt text"></p><p>可惜没什么用，突然想到在选择executor</p><pre><code>sudo gitlab-runner register</code></pre><p>  <img src="./png/register.png" alt="Alt text"></p><p>  可以选择shell。<br>  当我再次运行下面命令时,就可以运行了。</p><pre><code>  sudo gitlab-runner run</code></pre><p>  <img src="./png/gitlab-python.png" alt="Alt text"></p>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> Gitlab </tag>
            
            <tag> CI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>下载网易yum源</title>
      <link href="/2016/10/07/pa-chong/2016-10-7-xia-zai-wang-yi-yum-yuan/"/>
      <url>/2016/10/07/pa-chong/2016-10-7-xia-zai-wang-yi-yum-yuan/</url>
      
        <content type="html"><![CDATA[<p>最近在搭建opensatck环境，由于所有的部署为离线的状态，所以决定自己搭建一个yum源服务器<br>网上也有一下关于reposync和createrepo的用法，我在使用reposync时很多包出现下载失败，于是自己就写了一个脚本</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#!/usr/bin/env python</span><span class="token comment" spellcheck="true"># coding=utf-8</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> urllib2<span class="token keyword">import</span> bs4<span class="token keyword">import</span> sys<span class="token keyword">import</span> socketreload<span class="token punctuation">(</span>sys<span class="token punctuation">)</span>sys<span class="token punctuation">.</span>setdefaultencoding<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"Accept-Language"</span><span class="token punctuation">:</span><span class="token string">"zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3"</span><span class="token punctuation">,</span>    <span class="token string">"User-Agent"</span><span class="token punctuation">:</span><span class="token string">"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:42.0) Gecko/20100101 Firefox/42.0"</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#获取网页源代码</span><span class="token keyword">def</span> <span class="token function">get_Html</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>header<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true">#打开页面</span>        <span class="token comment" spellcheck="true">#设置使用代理</span>        socket<span class="token punctuation">.</span>setdefaulttimeout<span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span>        req <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span>None<span class="token punctuation">,</span>header<span class="token punctuation">)</span>        response <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">,</span>None<span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span>        Code <span class="token operator">=</span>  response<span class="token punctuation">.</span>code        <span class="token keyword">if</span> Code<span class="token operator">!=</span><span class="token number">200</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true">#响应码不是200</span>            <span class="token keyword">print</span> url  <span class="token operator">+</span><span class="token string">"error"</span>        the_page <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>  the_page    <span class="token keyword">except</span> Exception<span class="token punctuation">,</span>e<span class="token punctuation">:</span>        <span class="token keyword">print</span> <span class="token string">"页面打开出错"</span>        <span class="token keyword">print</span> Exception <span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">,</span>e<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">"http://mirrors.163.com/centos/7/cloud/x86_64/openstack-kilo/common/"</span>    html <span class="token operator">=</span> get_Html<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token punctuation">)</span>    bs <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">)</span>    url_tag <span class="token operator">=</span> bs<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>    number <span class="token operator">=</span> len<span class="token punctuation">(</span>url_tag<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>number<span class="token punctuation">)</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> url_tag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span>        <span class="token keyword">print</span> name <span class="token operator">+</span> <span class="token string">"下载中.."</span>        request_url <span class="token operator">=</span> url<span class="token operator">+</span>name        data <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>request_url<span class="token punctuation">,</span> stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> open<span class="token punctuation">(</span><span class="token string">"./common/"</span><span class="token operator">+</span>name<span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>            <span class="token keyword">for</span> chunk <span class="token keyword">in</span> data<span class="token punctuation">.</span>iter_content<span class="token punctuation">(</span>chunk_size<span class="token operator">=</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> chunk<span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># filter out keep-alive new chunks</span>                    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>                    f<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>            f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>需要的同学，可以直接修改url和需要下载的文件目录即可</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
